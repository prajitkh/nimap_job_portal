# #Server configuration
server.port=9002
spring.jpa.database=default
server.servlet.context-path=/api

 #Database configuration
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true


spring.datasource.url=jdbc:postgresql://127.0.0.1/jobportal
spring.datasource.username=postgres
spring.datasource.password=root


logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
#logging.level.tomcat=TRACE	

jwt.header=Authorization
jwt.secret=my-very-secret-key

spring.main.allow-circular-references=true


#Email integration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreplyntts@gmail.com
spring.mail.password=ikcohgfkhchhpcgr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

	spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password= 
spring.redis.database=0

#spring.redis.lettuce.pool.max-active=7 
#spring.redis.lettuce.pool.max-idle=7
#spring.redis.lettuce.pool.min-idle=2
##spring.redis.lettuce.pool.max-wait=-1ms  
##spring.redis.lettuce.shutdown-timeout=200ms 
#spring.cache.redis.cache-null-values=false
#spring.cache.redis.time-to-live=600000
#spring.cache.redis.use-key-prefix=true

spring.cache.type=redis

spring.kafka.producer.bootstrap-servers:localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=1KB
# Max file size.
spring.servlet.multipart.max-file-size=20MB
# Max Request Size
spring.servlet.multipart.max-request-size=50MB



spring.kafka.consumer.bootstrap-servers:localhost:9092
spring.kafka.consumer.group-id=bulkUpload
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


